tiers :: [[()]->[()]]  =
  [ [ \x -> case x of
              [] -> []
              [()] -> []
              [(),()] -> []
              [(),(),()] -> []
              [(),(),(),()] -> []
              [(),(),(),(),()] -> []
              [(),(),(),(),(),()] -> []
              [(),(),(),(),(),(),()] -> []
              ...
    ]
  , [ \x -> case x of
              [] -> [()]
              [()] -> [()]
              [(),()] -> [()]
              [(),(),()] -> [()]
              [(),(),(),()] -> [()]
              [(),(),(),(),()] -> [()]
              [(),(),(),(),(),()] -> [()]
              [(),(),(),(),(),(),()] -> [()]
              ...
    ]
  , [ \x -> case x of
              [] -> [()]
              [()] -> []
              [(),()] -> []
              [(),(),()] -> []
              [(),(),(),()] -> []
              [(),(),(),(),()] -> []
              [(),(),(),(),(),()] -> []
              [(),(),(),(),(),(),()] -> []
              ...
    , \x -> case x of
              [] -> []
              [()] -> [()]
              [(),()] -> [()]
              [(),(),()] -> [()]
              [(),(),(),()] -> [()]
              [(),(),(),(),()] -> [()]
              [(),(),(),(),(),()] -> [()]
              [(),(),(),(),(),(),()] -> [()]
              ...
    , \x -> case x of
              [] -> [(),()]
              [()] -> [(),()]
              [(),()] -> [(),()]
              [(),(),()] -> [(),()]
              [(),(),(),()] -> [(),()]
              [(),(),(),(),()] -> [(),()]
              [(),(),(),(),(),()] -> [(),()]
              [(),(),(),(),(),(),()] -> [(),()]
              ...
    ]
  , [ \x -> case x of
              [] -> [(),()]
              [()] -> []
              [(),()] -> []
              [(),(),()] -> []
              [(),(),(),()] -> []
              [(),(),(),(),()] -> []
              [(),(),(),(),(),()] -> []
              [(),(),(),(),(),(),()] -> []
              ...
    , \x -> case x of
              [] -> []
              [()] -> [()]
              [(),()] -> []
              [(),(),()] -> []
              [(),(),(),()] -> []
              [(),(),(),(),()] -> []
              [(),(),(),(),(),()] -> []
              [(),(),(),(),(),(),()] -> []
              ...
    , \x -> case x of
              [] -> [()]
              [()] -> []
              [(),()] -> [()]
              [(),(),()] -> [()]
              [(),(),(),()] -> [()]
              [(),(),(),(),()] -> [()]
              [(),(),(),(),(),()] -> [()]
              [(),(),(),(),(),(),()] -> [()]
              ...
    , \x -> case x of
              [] -> []
              [()] -> [(),()]
              [(),()] -> [(),()]
              [(),(),()] -> [(),()]
              [(),(),(),()] -> [(),()]
              [(),(),(),(),()] -> [(),()]
              [(),(),(),(),(),()] -> [(),()]
              [(),(),(),(),(),(),()] -> [(),()]
              ...
    , \x -> case x of
              [] -> [(),(),()]
              [()] -> [(),(),()]
              [(),()] -> [(),(),()]
              [(),(),()] -> [(),(),()]
              [(),(),(),()] -> [(),(),()]
              [(),(),(),(),()] -> [(),(),()]
              [(),(),(),(),(),()] -> [(),(),()]
              [(),(),(),(),(),(),()] -> [(),(),()]
              ...
    ]
  , ...
  ]

map length (tiers :: [[ [()]->[()] ]])  =  [1,1,3,5,...]

length (list :: [ [()]->[()] ])  =  Infinity

allUnique (list :: [ [()]->[()] ])  =  True

ratioRepetitions (list :: [ [()]->[()] ])  =  0 % 1
